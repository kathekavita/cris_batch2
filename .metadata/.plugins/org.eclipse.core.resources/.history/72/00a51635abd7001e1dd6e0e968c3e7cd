package com.example.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.example.config.JWTHelper;
import com.example.model.JwtRequest;
import com.example.model.JwtResponse;
import com.example.service.CustomUserDetailsService;

@RestController
public class JwtController {
	
	@Autowired
	CustomUserDetailsService customUserDetailsService;
	
	@Autowired
	JWTHelper jwtUtil;
	
	@Autowired
	AuthenticationManager authenticationManager;

	
	@RequestMapping(value = "/token", method = RequestMethod.POST)
	public ResponseEntity<?> generateToken(@RequestBody JwtRequest jwtRequest) {
		
		System.out.println("jwt is "+jwtRequest);
		
		try {
			
			this.authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(jwtRequest.getUsername(), jwtRequest.getPassword()));
		}
		catch(Exception e) {
			
			System.out.println("inside catch");
		}
		
	    UserDetails	userDetails = customUserDetailsService.loadUserByUsername(jwtRequest.getUsername());
		
	    String token = this.jwtUtil.generateJwtToken(userDetails);
	    
	    
	    
	    return ResponseEntity.ok(new JwtResponse(token));
	}
	
}
